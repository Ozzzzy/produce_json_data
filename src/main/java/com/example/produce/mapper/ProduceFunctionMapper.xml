<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.produce.mapper.ProduceFunctionMapper">

    <insert id="add" parameterType="com.example.produce.entity.ProduceFunction" useGeneratedKeys="true">
        INSERT INTO produce.produce_function
            (functionId,
             functionType,
             functionName,
             fieldName,
             transportType,
             functionDescription,
             produceId)
             VALUES
                    (#{functionId},
                     #{functionType},
                     #{functionName},
                     #{fieldName},
                     #{transportType},
                     #{functionDescription},
                     #{produceId})
    </insert>

    <update id="modify" parameterType="com.example.produce.entity.ProduceFunction" useGeneratedKeys="true">
        UPDATE produce.produce_function SET functionType = #{functionType},
                                            functionName = #{functionName},
                                            fieldName = #{fieldName},
                                            transportType = #{transportType},
                                            functionDescription = #{functionDescription},
                                            produceId = #{produceId}
        WHERE functionId = #{functionId} and isDelete = 0
    </update>

    <select id="details" parameterType="java.lang.Integer"
            resultType="com.example.produce.entity.ProduceFunction">
        SELECT functionId,
               functionType,
               functionName,
               fieldName,
               transportType,
               functionDescription,
               produceId
        FROM produce.produce_function WHERE functionId = #{functionId} and isDelete = 0
    </select>

    <select id="functionList" parameterType="com.example.produce.entity.ProduceFunction"
            resultType="com.example.produce.entity.ProduceFunction">
        SELECT functionId,
               functionType,
               functionName,
               fieldName,
               transportType,
               functionDescription,
               produceId
        FROM produce.produce_function WHERE isDelete = 0
    </select>

    <update id="delete" parameterType="java.lang.Integer">
        UPDATE produce.produce_function,produce.produce_data set produce_function.isDelete = 1 ,produce_data.isDelete = 1
        WHERE produce_function.functionId = #{functionId} and produce_data.functionId = #{functionId}
    </update>

    <select id="getNameListByProduceId" parameterType="java.lang.Integer" resultType="java.lang.String">
        SELECT functionName
        from produce.produce_function WHERE produceId = #{produceId} and isDelete = 0
    </select>

    <select id="getNameListByProduceId2" parameterType="com.example.produce.entity.SelectRequest" resultType="java.lang.String">
        SELECT functionName
        from produce.produce_function WHERE produceId = #{produceId} and functionId != #{anotherId} and isDelete = 0
    </select>

    <select id="getFunctionIdListByProduceId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        SELECT functionId FROM produce.produce_function WHERE produceId = #{produceId}
    </select>
</mapper>